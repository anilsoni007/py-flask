name: Push Image to ECR
on:
  push:
      branches: 
        - sandbox
  workflow_run: 
    workflows: [python-panda-app]
    types:
      - completed
env:
  ENV_NAME: ${{ github.ref == 'refs/heads/sandbox' && 'sandbox' || 'staging' }}

  
jobs:
  Push-to-ECR:
    outputs:
      IMAGE: ${{ steps.image_capture.outputs.IMAGE_NAME }}
    environment:
      name: sandbox
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_SANDBOX_ROLE }}
          aws-region: ap-south-1

      - name: image capture
        id: image_capture
        run: |
         IMAGE_NAME="${{ vars.ECR_REG }}/${{ env.ENV_NAME }}/sbx-artifactory:${{ github.sha }}"
         echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: build docker image
        run: docker build -t ${{ vars.ECR_REG }}/${{ env.ENV_NAME }}/sbx-artifactory:${{ github.sha }} .

      - name: push to ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ vars.ECR_REG }}
          docker push ${{ vars.ECR_REG }}/${{ env.ENV_NAME }}/sbx-artifactory:${{ github.sha }}
  
  Deploying-to-instance:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    needs: [Push-to-ECR]
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_SANDBOX_ROLE }}
          aws-region: ap-south-1

      - name: Get public ip
        run: |
          PUBLIC_IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=Sandbox-Instance" --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "PUBLIC_IP=$PUBLIC_IP"
      - name: ssh action
        uses: appleboy/ssh-action@v1.2.0
        env:
          REG: ${{ vars.ECR_REG}}
        with:
          host: ${{ env.PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.KEY }}
          port: 22
          script: |
            echo "deploying latest ECR image"
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $REG
            docker container run --name mycontainer -itd -p 5000:5000 $REG/${{ env.ENV_NAME }}/sbx-artifactory:${{ github.sha }}
            211125418300.dkr.ecr.ap-south-1.amazonaws.com/sandbox/sbx-artifactory:c9bc0fa88d6b5a51ce625ff0d682f87cc255208a
      
   
      
              



      
